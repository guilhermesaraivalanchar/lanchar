= render :partial => "/partials/error_display", :locals => { :object => @user }

.form-body
  = simple_form_for @user do |f|
    - if current_user.tem_permissao("editar_usuarios")
      h4.box-title.m-t-10
        | Dados do Usuário
      hr
      .clear
      div.col-12
        = f.input :imagem, as: :file, input_html: { nome_validacao: "Código", class: "dropify", "data-default-file": @user_imagem, "data-allowed-file-extensions": "png jpg jpeg" }
        = f.input :nome, label: "Nome", input_html: { nome_validacao: "Nome" }
        = f.input :codigo, label: "Codigo", input_html: { nome_validacao: "Código" }
        = f.input :cartao, label: "Cartão", input_html: { nome_validacao: "Cartão" }
        = f.input :turma, label: "Turma", input_html: { nome_validacao: "Turma" }
        = f.input :tipo_users, as: :hidden, input_html: { value: @user.tipos_users.map(&:tipo_user_id).join(',') }
        h5.m-t-20 Tipos de Usuario
        select#select_tipo_users.select2.m-b-10.select2-multiple data-placeholder="Escolha" multiple="multiple" style=("width: 100%")
          - tipos_users = @user.tipos_users.map(&:tipo_user_id)
          - TipoUser.where(escola_id: current_user.escola_id).each do |tipo_user|
            - if tipos_users.include?(tipo_user.id)
              option selected="true" value="#{tipo_user.id}"
                = "#{tipo_user.nome}"
            - else
              option value="#{tipo_user.id}"
                = "#{tipo_user.nome}"
        br
        = f.input :responsavel_ids, as: :hidden, input_html: { value: @user.tipos_users.map(&:tipo_user_id).join(',') }
        h5.m-t-20 Responsáveis
        select#select_responsavel_ids.select2.m-b-10.select2-multiple data-placeholder="Escolha" multiple="multiple" style=("width: 100%")
          - user_responsaveis = @user.responsavel_users.map(&:responsavel_id)
          - User.where(escola_id: current_user.escola_id, sem_compra: true).each do |responsavel|
            - if user_responsaveis.include?(responsavel.id)
              option selected="true" value="#{responsavel.id}"
                = "#{responsavel.nome}"
            - else
              option value="#{responsavel.id}"
                = "#{responsavel.nome}"
        br
        br
        = f.input :sem_compra, label: "Sem Compra", :as => :boolean, boolean_style: :inline, input_html: { class: "filled-in checkbox inline" }
        - if current_user.tem_permissao("resetar_senha_usuario")
          br
          button#resetar_senha.btn.btn-danger.waves-effect.waves-light.m-r-10 type="button" Resetar Senha
          button#botao_reset_senha_totem.btn.btn-danger.waves-effect.waves-light.m-r-10 type="button" Resetar Senha Totem
          br
          br
          div#confirm_reset_senha.alert.alert-info style="display:none"
            span Senha Resetada com sucesso.


    - if current_user.tem_permissao("editar_funcoes_credito") || @user_responsavel

      h4.box-title.m-t-10
        | Dados de Crédito
      hr
      .clear
      div.col-12
        = f.input :credito, label: "Limite de Credito", input_html: { nome_validacao: "Credito" }
        = f.input :saldo_diario, label: "Saldo Diário", input_html: { nome_validacao: "Saldo Diário" }
        br

    - if current_user.tem_permissao("bloquear_produtos") || @user_responsavel
      
      h4.box-title.m-t-10
        | Bloqueio de Produtos
      hr
      .clear
      div.col-12
        div
          button.btn.btn-secondary.btn-block.text-uppdercase.waves-effect.waves-light type="button" data-toggle="collapse" data-target="#collapse_bloqueio_produtos" aria-expanded="false" aria-controls="collapse_bloqueio_produtos"
            | Bloqueio Produtos
          .collapse id="collapse_bloqueio_produtos" style="padding-top: 5px;"
            div.row
              - Produto.where(ativo: true).each do |produto|
                .col-lg-3.col-md-6.col-sm-12
                  = f.input :produto_ids, label: produto.nome ,as: :boolean,boolean_style: :inline, checked: 'checked', checked_value: produto.id, unchecked_value: nil, disabled: false, input_html: { :class => "filled-in", id: "produto_ids_#{produto.id}", name: "user[produto_ids][]", checked: @produtos_bloqueados.include?(produto.id)}
        br
      .clear

    button.btn.btn-success.waves-effect.waves-light.m-r-10 type="submit"
      | Enviar
    - if !@user_responsavel
      = link_to "Voltar", users_path, helper: "button", class: "btn btn-inverse waves-light waves-effect"
    - else
      = link_to "Voltar", user_path(@user.id), helper: "button", class: "btn btn-inverse waves-light waves-effect"

javascript:
  $(".select2").select2();

  $("#select_tipo_users").change(function(){
    console.log($(this).val())
    $("#user_tipo_users").val($(this).val())
  })

  $("#select_responsavel_ids").change(function(){
    console.log($(this).val())
    $("#user_responsavel_ids").val($(this).val())
  })

  $('.dropify').dropify({
    messages: {
      'default': '',
      'replace': 'Arraste a Imagem ou click aqui para trocar',
      'remove':  'Remove',
      'error':   'Ooops, Ocorreu um erro.'
    },
    error: {
      'fileExtension': 'Formato do arquivo não permitido, Formatos permitidos: ({{ value }}).'
    }
  });

  $("#resetar_senha").click(function(){
    $.getJSON("/resetar_senha", { user_id: "#{@user.id}" },function(resultado) {
      if (resultado && resultado.status == "OK") {
        console.log("gsdgrdgrdg")
        $("#confirm_reset_senha").show()
      } else {
        console.log("NAO DEU");
      }
    })
  })


  $("#botao_reset_senha_totem").click(function(){
    $.getJSON("/resetar_senha_totem", { user_id: "#{@user.id}" },function(resultado) {
      if (resultado && resultado.status == "OK") {
        $("#confirm_reset_senha").show()

      } else {
        console.log("NAO DEU");
      }
    })
  })


  $(document).ready(function() {
    $(window).keydown(function(event){
      if(event.keyCode == 13) {
        event.preventDefault();
        return false;
      }
    });
  });
